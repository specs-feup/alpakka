{
	"root": "placeholder",
	"rootAlias": "placeholder",
	"children": [
		{
			"type": "joinpoint",
			"name": "joinpoint",
			"extends": ""		,
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "arrayType",
			"extends": "typeDescriptor"		,
			"tooltip": "Array descriptor",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "catch",
			"extends": "statement"		,
			"tooltip": "Catch directive",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "labelReference",
										"name": "catch"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "typeDescriptor",
										"name": "exception"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "labelReference",
										"name": "tryEnd"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "labelReference",
										"name": "tryStart"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "classNode",
			"extends": "joinpoint"		,
			"tooltip": "Class definition",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "classType",
										"name": "classDescriptor"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "fieldNode[]",
										"name": "fields"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "methodNode[]",
										"name": "methods"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "classType",
										"name": "superClassDescriptor"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "classType",
			"extends": "typeDescriptor"		,
			"tooltip": "Class descriptor",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "className"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "classNode",
										"name": "decl"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "packageName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "expression",
			"extends": "joinpoint"		,
			"tooltip": "Expression",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "fieldNode",
			"extends": "joinpoint"		,
			"tooltip": "Field definition",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "isStatic"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "referenceName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "fieldReference",
			"extends": "expression"		,
			"tooltip": "Field reference",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "goto",
			"extends": "instruction"		,
			"tooltip": "Smali instruction formats 10t, 20t, 30t",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "labelReference",
										"name": "label"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "canThrow"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "opCodeName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsRegister"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsResult"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "ifComparison",
			"extends": "instruction"		,
			"tooltip": "Smali instruction format 22t",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "labelReference",
										"name": "label"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "canThrow"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "opCodeName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsRegister"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsResult"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "ifComparisonWithZero",
			"extends": "instruction"		,
			"tooltip": "Smali instruction format 21t",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "labelReference",
										"name": "label"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "canThrow"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "opCodeName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsRegister"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsResult"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "instruction",
			"extends": "statement"		,
			"tooltip": "Instruction",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "canThrow"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "opCodeName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsRegister"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsResult"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "label",
			"extends": "statement"		,
			"tooltip": "Label declaration",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "labelReference",
			"extends": "expression"		,
			"tooltip": "Label reference",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "label",
										"name": "decl"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "lineDirective",
			"extends": "statement"		,
			"tooltip": "Line directive",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "literal",
										"name": "value"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "literal",
			"extends": "expression"		,
			"tooltip": "Literal",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "manifest",
			"extends": "joinpoint"		,
			"tooltip": "The application's manifest",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "activities"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "packageName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "services"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "methodNode",
			"extends": "joinpoint"		,
			"tooltip": "Method definition",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "isStatic"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "methodPrototype",
										"name": "prototype"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "referenceName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "registersDirective",
										"name": "registersDirective"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "methodPrototype",
			"extends": "literal"		,
			"tooltip": "Method prototype",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "typeDescriptor[]",
										"name": "parameters"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "typeDescriptor",
										"name": "returnType"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "methodReference",
			"extends": "expression"		,
			"tooltip": "Method reference",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "typeDescriptor",
										"name": "parentClassDescriptor"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "methodPrototype",
										"name": "prototype"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "packedSwitch",
			"extends": "statement"		,
			"tooltip": "Packed switch directive",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "placeholder",
			"extends": "joinpoint"		,
			"tooltip": "Placeholder node",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "kind"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "primitiveLiteral",
			"extends": "literal"		,
			"tooltip": "Primitive literal",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "setValue"
									},
									{
										"type": "String",
										"name": "value"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "primitiveType",
			"extends": "typeDescriptor"		,
			"tooltip": "Primitive descriptor",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "program",
			"extends": "joinpoint"		,
			"tooltip": "App node",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "void",
										"name": "buildApk"
									},
									{
										"type": "String",
										"name": "outputName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "classNode[]",
										"name": "classes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "manifest",
										"name": "manifest"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "registerList",
			"extends": "expression"		,
			"tooltip": "Register list",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "registerRange",
			"extends": "expression"		,
			"tooltip": "Register range",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "registerReference",
			"extends": "expression"		,
			"tooltip": "Register reference",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "registersDirective",
			"extends": "statement"		,
			"tooltip": "Registers directive",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "primitiveLiteral",
										"name": "value"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "resourceNode",
			"extends": "joinpoint"		,
			"tooltip": "Resource nodes, like xml files are not being handled for now",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "returnStatement",
			"extends": "instruction"		,
			"tooltip": "Smali instruction formats 10x, 11x",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "canThrow"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "opCodeName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsRegister"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsResult"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "sparseSwitch",
			"extends": "statement"		,
			"tooltip": "Sparse switch directive",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "sparseSwitchElement",
			"extends": "expression"		,
			"tooltip": "Sparse switch element",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "labelReference",
										"name": "label"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "statement",
			"extends": "joinpoint"		,
			"tooltip": "Statement",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "switch",
			"extends": "instruction"		,
			"tooltip": "Smali instruction format 31t",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "canThrow"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "opCodeName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsRegister"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsResult"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "throwStatement",
			"extends": "instruction"		,
			"tooltip": "Smali instruction format 11x",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "canThrow"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String",
										"name": "opCodeName"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsRegister"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "boolean",
										"name": "setsResult"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "lineDirective",
										"name": "line"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "nextStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "statement",
										"name": "prevStatement"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		},
		{
			"type": "joinpoint",
			"name": "typeDescriptor",
			"extends": "literal"		,
			"tooltip": "Type descriptor",
			"children": [
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "attributes"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "selects"
									}]
					},
					{
						"type": "attribute",
						"children": [
									{
										"type": "String[]",
										"name": "actions"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String representation of the ast",
						"children": [
									{
										"type": "String",
										"name": "ast"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns an array with the children of the node, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "children"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "String with the code represented by this node",
						"children": [
									{
										"type": "String",
										"name": "code"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves all descendants of the join point",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "descendants"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Looks for an ancestor joinpoint name, walking back on the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "getAncestor"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the child of the node at the given index, ignoring null nodes",
						"children": [
									{
										"type": "joinpoint",
										"name": "getChild"
									},
									{
										"type": "int",
										"name": "index"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendants"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Retrieves the descendants of the given type, including the node itself",
						"children": [
									{
										"type": "joinpoint[]",
										"name": "getDescendantsAndSelf"
									},
									{
										"type": "String",
										"name": "type"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "The id of the node",
						"children": [
									{
										"type": "String",
										"name": "id"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the parent node in the AST, or undefined if it is the root node",
						"children": [
									{
										"type": "joinpoint",
										"name": "parent"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "Returns the 'program' joinpoint",
						"children": [
									{
										"type": "program",
										"name": "root"
									}]
					},
					{
						"type": "attribute",
						"tooltip": "true if the current join point is an instance of the given type",
						"children": [
									{
										"type": "Boolean",
										"name": "instanceOf"
									},
									{
										"type": "String",
										"name": "name"
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "insert"
									},
									{
										"type": "[before| after| replace]",
										"name": "position",
										"defaultValue": ""
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"children": [
									{
										"type": "void",
										"name": "def"
									},
									{
										"type": "String",
										"name": "attribute",
										"defaultValue": ""
									},
									{
										"type": "Object",
										"name": "value",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Removes the node associated to this joinpoint from the AST",
						"children": [
									{
										"type": "joinpoint",
										"name": "detach"
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point after this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertAfter"
									},
									{
										"type": "String",
										"name": "code",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Inserts the given join point before this join point",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "insertBefore"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Replaces this node with the given node",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a string",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "String",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of join points",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWith"
									},
									{
										"type": "joinpoint[]",
										"name": "node",
										"defaultValue": ""
									}]
					},
					{
						"type": "action",
						"tooltip": "Overload which accepts a list of strings",
						"children": [
									{
										"type": "joinpoint",
										"name": "replaceWithStrings"
									},
									{
										"type": "String[]",
										"name": "node",
										"defaultValue": ""
									}]
					}]
		}]
}